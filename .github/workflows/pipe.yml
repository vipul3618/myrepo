name: DevSecOps CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'

      - name: SonarQube Scan
        run: |
          ./gradlew sonarqube \
          -Dsonar.projectKey=my-project \
          -Dsonar.host.url=https://sonarqube.myorg.com \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'my-app'
          scan: './'
          format: 'HTML'
          out: 'dependency-report'

      - name: Upload OWASP Report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-report
          path: dependency-report

      - name: Build Docker Image
        run: docker build -t myrepo/myapp:${{ github.sha }} .

      - name: Trivy Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'myrepo/myapp:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          severity: 'HIGH,CRITICAL'

      - name: DockerHub Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker Image
        run: docker push myrepo/myapp:${{ github.sha }}

      - name: Render Helm Template
        run: |
          helm dependency update helm/
          helm template myapp helm/ --set image.tag=${{ github.sha }} > k8s-manifests/myapp.yaml

      - name: Commit Manifests
        run: |
          git config --global user.email "ci@myorg.com"
          git config --global user.name "CI Bot"
          git add k8s-manifests/
          git commit -m "Deploy ${{ github.sha }}"
          git push

      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,commit,message
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
